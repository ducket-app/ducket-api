-- MySQL Script generated by MySQL Workbench
-- Sun Jan 16 14:12:49 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE SCHEMA IF NOT EXISTS `ducket` DEFAULT CHARACTER SET utf8 ;
USE `ducket` ;


CREATE TABLE IF NOT EXISTS `ducket`.`currency` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `area` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `symbol` VARCHAR(45) NOT NULL,
  `iso_code` VARCHAR(3) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `currency_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `country_UNIQUE` (`area` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);


CREATE TABLE IF NOT EXISTS `ducket`.`user` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `main_currency_id` BIGINT NOT NULL,
  `phone` VARCHAR(32) NULL,
  `name` VARCHAR(64) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `password_hash` VARCHAR(64) NOT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `phone_number_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `user_main_currency_fk_idx` (`main_currency_id` ASC) VISIBLE,
  UNIQUE INDEX `uuid_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) VISIBLE,
  CONSTRAINT `user_main_currency_fk`
    FOREIGN KEY (`main_currency_id`)
    REFERENCES `ducket`.`currency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `ducket`.`account` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `currency_id` BIGINT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `account_type` ENUM("GENERAL", "DEBIT_CARD", "CREDIT_CARD", "CASH", "BANK_ACCOUNT", "SAVINGS") NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `notes` VARCHAR(128) NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `account_currency_fk_idx` (`currency_id` ASC) VISIBLE,
  INDEX `account_user_fk_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `account_currency_fk`
    FOREIGN KEY (`currency_id`)
    REFERENCES `ducket`.`currency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `account_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `ducket`.`category` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `group` ENUM('HOUSING', 'FOOD_AND_DRINKS', 'SHOPPING', 'CHILDREN', 'PETS', 'LIFE_AND_LEISURE', 'TRANSPORT', 'UTILITIES', 'FINANCIAL_COSTS', 'INVESTMENTS', 'INFLOW', 'UNCATEGORIZED') NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);


CREATE TABLE IF NOT EXISTS `ducket`.`import` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT NOT NULL,
  `file_path` VARCHAR(45) NOT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `import_user_fk_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `import_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`transaction` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `import_id` BIGINT NULL,
  `category_id` BIGINT NULL,
  `account_id` BIGINT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `amount` DECIMAL(10,2) NOT NULL,
  `date` TIMESTAMP(3) NOT NULL,
  `payee_or_payer` VARCHAR(128) NOT NULL,
  `notes` VARCHAR(128) NULL DEFAULT NULL,
  `longitude` VARCHAR(45) NULL DEFAULT NULL,
  `latitude` VARCHAR(45) NULL DEFAULT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `user_account_id_idx` (`account_id` ASC) VISIBLE,
  INDEX `category_id_idx` (`category_id` ASC) VISIBLE,
  INDEX `import_id_idx` (`import_id` ASC) VISIBLE,
  INDEX `transaction_user_fk_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `transaction_account_fk`
    FOREIGN KEY (`account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transaction_category_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `ducket`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transaction_import_fk`
    FOREIGN KEY (`import_id`)
    REFERENCES `ducket`.`import` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transaction_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`import_rule` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `user_id` BIGINT NOT NULL,
  `record_category_id` BIGINT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `expense` TINYINT NOT NULL,
  `income` TINYINT NOT NULL,
  `keywords` VARCHAR(512) NOT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `category_id_idx` (`record_category_id` ASC) VISIBLE,
  INDEX `rule_user_fk_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `rule_record_category_fk`
    FOREIGN KEY (`record_category_id`)
    REFERENCES `ducket`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `rule_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`budget` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `category_id` BIGINT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `currency_id` BIGINT NOT NULL,
  `period_type` ENUM("WEEKLY", "MONTHLY", "ANNUAL") NOT NULL,
  `is_closed` TINYINT NOT NULL DEFAULT 0,
  `name` VARCHAR(45) NOT NULL,
  `limit` DECIMAL(10,2) NOT NULL,
  `notes` VARCHAR(128) NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `budget_currency_fk_idx` (`currency_id` ASC) VISIBLE,
  INDEX `budget_category_fk_idx` (`category_id` ASC) VISIBLE,
  INDEX `budget_user_fk_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `budget_currency_fk`
    FOREIGN KEY (`currency_id`)
    REFERENCES `ducket`.`currency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `budget_category_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `ducket`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `budget_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`transfer` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `import_id` BIGINT NULL,
  `user_id` BIGINT NOT NULL,
  `account_id` BIGINT NOT NULL,
  `transfer_account_id` BIGINT NOT NULL,
  `amount` DECIMAL(10,2) NOT NULL,
  `date` TIMESTAMP(3) NOT NULL,
  `exchange_rate` DECIMAL(10,4) NOT NULL,
  `relation_code` VARCHAR(36) NULL,
  `notes` VARCHAR(128) NULL DEFAULT NULL,
  `longitude` VARCHAR(45) NULL DEFAULT NULL,
  `latitude` VARCHAR(45) NULL DEFAULT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  `modified_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `user_account_id_idx` (`account_id` ASC) VISIBLE,
  INDEX `transfer_to_account_fk_idx` (`transfer_account_id` ASC) VISIBLE,
  INDEX `transfer_user_fk_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `transfer_import_fk_idx` (`import_id` ASC) VISIBLE,
  CONSTRAINT `transfer_account_fk`
    FOREIGN KEY (`account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transfer_to_account_fk`
    FOREIGN KEY (`transfer_account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transfer_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transfer_import_fk`
    FOREIGN KEY (`import_id`)
    REFERENCES `ducket`.`import` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`budget_account` (
  `budget_id` BIGINT NOT NULL,
  `account_id` BIGINT NOT NULL,
  INDEX `budget_fk_idx` (`budget_id` ASC) VISIBLE,
  INDEX `budget_account_fk_idx` (`account_id` ASC) VISIBLE,
  PRIMARY KEY (`budget_id`, `account_id`),
  CONSTRAINT `budget_account_budget_fk`
    FOREIGN KEY (`budget_id`)
    REFERENCES `ducket`.`budget` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `budget_account_account_fk`
    FOREIGN KEY (`account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`attachment` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `file_path` VARCHAR(128) NOT NULL,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE);


CREATE TABLE IF NOT EXISTS `ducket`.`transaction_attachment` (
  `transaction_id` BIGINT NOT NULL,
  `attachment_id` BIGINT NOT NULL,
  INDEX `transaction_attachment_transactiont_fk_idx` (`transaction_id` ASC) VISIBLE,
  INDEX `transaction_attachment_attachment_fk_idx` (`attachment_id` ASC) VISIBLE,
  PRIMARY KEY (`transaction_id`, `attachment_id`),
  CONSTRAINT `transaction_attachment_transactiont_fk`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `ducket`.`transaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transaction_attachment_attachment_fk`
    FOREIGN KEY (`attachment_id`)
    REFERENCES `ducket`.`attachment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`transfer_attachment` (
  `transfer_id` BIGINT NOT NULL,
  `attachment_id` BIGINT NOT NULL,
  INDEX `transaction_attachment_attachment_fk_idx` (`attachment_id` ASC) VISIBLE,
  INDEX `transfer_attachment_transfer_fk0_idx` (`transfer_id` ASC) VISIBLE,
  PRIMARY KEY (`transfer_id`, `attachment_id`),
  CONSTRAINT `transfer_attachment_transfer_fk`
    FOREIGN KEY (`transfer_id`)
    REFERENCES `ducket`.`transfer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `transfer_attachment_attachment_fk`
    FOREIGN KEY (`attachment_id`)
    REFERENCES `ducket`.`attachment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`follow` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `follower_id` BIGINT NOT NULL,
  `followed_id` BIGINT NOT NULL,
  `is_pending` TINYINT NOT NULL DEFAULT 1,
  `created_at` TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
  PRIMARY KEY (`id`),
  INDEX `follower_user_fk_idx` (`follower_id` ASC) VISIBLE,
  INDEX `followed_user_fk_idx` (`followed_id` ASC) VISIBLE,
  CONSTRAINT `follower_user_fk`
    FOREIGN KEY (`follower_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `followed_user_fk`
    FOREIGN KEY (`followed_id`)
    REFERENCES `ducket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


CREATE TABLE IF NOT EXISTS `ducket`.`account_transaction` (
  `account_id` BIGINT NOT NULL,
  `transaction_id` BIGINT NOT NULL,
  PRIMARY KEY (`account_id`, `transaction_id`),
  INDEX `account_transaction_transaction_fk_idx` (`transaction_id` ASC) VISIBLE,
  CONSTRAINT `account_transaction_account_fk`
    FOREIGN KEY (`account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `account_transaction_transaction_fk`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `ducket`.`transaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE IF NOT EXISTS `ducket`.`account_transfer` (
  `account_id` BIGINT NOT NULL,
  `transfer_id` BIGINT NOT NULL,
  PRIMARY KEY (`account_id`, `transfer_id`),
  INDEX `account_transfer_transfer_fk_idx` (`transfer_id` ASC) VISIBLE,
  CONSTRAINT `account_transfer_account_fk`
    FOREIGN KEY (`account_id`)
    REFERENCES `ducket`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `account_transfer_transfer_fk`
    FOREIGN KEY (`transfer_id`)
    REFERENCES `ducket`.`transfer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

USE `ducket`;

DELIMITER $$
USE `ducket`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ducket`.`account_BEFORE_DELETE` BEFORE DELETE ON `account` FOR EACH ROW
BEGIN
	DELETE FROM `account_transaction` WHERE `account_transaction`.`account_id` = OLD.`id`;
	DELETE FROM `account_transfer` WHERE `account_transfer`.`account_id` = OLD.`id`;
	DELETE FROM `transaction` WHERE `transaction`.`account_id` = OLD.`id`;
    DELETE FROM `transfer` WHERE `transfer`.`account_id` = OLD.`id` OR `transfer`.`transfer_account_id` = OLD.`id`;
    DELETE FROM `budget_account` WHERE `budget_account`.`account_id` = OLD.`id`;
END$$

USE `ducket`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ducket`.`import_AFTER_DELETE` AFTER DELETE ON `import` FOR EACH ROW
BEGIN
	DELETE FROM `transaction` WHERE `transaction`.`import_id` = OLD.`id`;
	DELETE FROM `transfer` WHERE `transfer`.`import_id` = OLD.`id`;
END$$

USE `ducket`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ducket`.`budget_BEFORE_DELETE` BEFORE DELETE ON `budget` FOR EACH ROW
BEGIN
	DELETE FROM `budget_account` WHERE `budget_account`.`budget_id` = OLD.`id`;
END$$

USE `ducket`$$
CREATE DEFINER = CURRENT_USER TRIGGER `ducket`.`attachment_BEFORE_DELETE` BEFORE DELETE ON `attachment` FOR EACH ROW
BEGIN
	DELETE FROM `transfer_attachment` WHERE `transfer_attachment`.`attachment_id` = OLD.`id`;
    DELETE FROM `transaction_attachment` WHERE `transaction_attachment`.`attachment_id` = OLD.`id`;
    DELETE FROM `user_attachment` WHERE `user_attachment`.`attachment_id` = OLD.`id`;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
