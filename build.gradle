buildscript {
    ext {
        kotlin_version = "1.6.10"
        logback_version = "1.2.1"
        log4j_version = "2.14.1"
        ktor_version = "1.5.1"
        ktorm_version = "3.2.0"
        kodein_version = "6.1.0"
        hikaricp_version = "3.4.5"
        exposed_version = "0.31.1"
        unirest_version = "1.4.9"
        flyway_version = "8.1.0"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.1"
        classpath "gradle.plugin.org.flywaydb:gradle-plugin-publishing:8.3.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "org.flywaydb.flyway"

group 'io.ducket.api'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

shadowJar {
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget=1.8
    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    mavenCentral()
}

tasks.named("shadowJar") {
    dependsOn tasks.named("test")
}

test {
    useJUnitPlatform()
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"

    // Metrics
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"
    implementation "io.micrometer:micrometer-registry-prometheus:1.7.1"

    // Koin DI
    implementation "io.insert-koin:koin-ktor:3.1.4"
    implementation "io.insert-koin:koin-logger-slf4j:3.1.4"

    // csv
    implementation "org.apache.commons:commons-csv:1.5"

    // ml
    implementation "nz.ac.waikato.cms.weka:weka-stable:3.8.0"
    implementation "org.nield:kotlin-statistics:1.2.1"

    // Levenshtein Distance
    implementation "org.apache.commons:commons-text:1.5"

    // Aho-Corasick algorithm
    implementation "org.ahocorasick:ahocorasick:0.4.0"

    // money conversion
    // implementation "javax.money:money-api:1.1"
    implementation "org.javamoney.lib:javamoney-exchange-frb:1.1"

    // validation
    implementation "io.konform:konform:0.3.0"
    implementation "org.valiktor:valiktor-core:0.12.0"

    // password hashing
    implementation "org.mindrot:jbcrypt:0.4"

    // data mapping
    implementation "org.modelmapper:modelmapper:2.4.2"

    // Ktor's core components
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"

    // auth
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"

    // Database
    implementation 'mysql:mysql-connector-java:8.0.11'
    implementation "com.zaxxer:HikariCP:3.4.5"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version" // for work with date and time values from db
    implementation "org.flywaydb:flyway-core:$flyway_version"

    // Netty engine
    implementation "io.ktor:ktor-server-netty:$ktor_version"

    // cio engine
    implementation "io.ktor:ktor-client-cio:$ktor_version"

    // An implementation of SLF4J
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.slf4j:jul-to-slf4j:1.7.0"

    // client serialization
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1"
    implementation "org.apache.camel:camel-xpath:3.9.0"

    // for serialization/deserialization
    implementation "io.ktor:ktor-jackson:$ktor_version"

    // provides a convenient mechanism for converting Kotlin objects into a serialized form like JSON, and vice versa
    implementation "io.ktor:ktor-serialization:$ktor_version"

    // allows us to test parts of our Ktor application without having to use the whole HTTP stack in the process
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "com.h2database:h2:2.0.204"
    testImplementation "io.mockk:mockk:1.12.2"
    testImplementation 'io.kotest:kotest-runner-junit5:5.0.3'
    testImplementation 'io.kotest:kotest-assertions-core-jvm:5.0.3'
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.0"
}
