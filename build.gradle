buildscript {
    ext {
        kotlin_version = "1.6.10"
        logback_version = "1.2.1"
        log4j_version = "2.14.1"
        ktor_version = "1.6.8"
        hikaricp_version = "3.4.5"
        exposed_version = "0.38.1"
        unirest_version = "1.4.9"
        flyway_version = "8.2.2"
        valiktor_version = "0.12.0"
        quartz_version = "2.3.2"
        dataframe_version = "0.8.0"
        jbcrypt_version = "0.4"
        h2_version = "2.1.210"
        hikari_version = "3.4.5"
        mysql_connector_version = "8.0.11"
        mockk_version = "1.12.2"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.1"
        classpath "gradle.plugin.org.flywaydb:gradle-plugin-publishing:8.3.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'jacoco'

group 'io.ducket.api'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

shadowJar {
    manifest {
        attributes 'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget=1.8
    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    mavenCentral()
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperty("junit.jupiter.testinstance.lifecycle.default", "per_class")
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

tasks.named("shadowJar") {
    dependsOn tasks.named("test")
}

test.finalizedBy(jacocoTestReport)

jacoco {
    // You may modify the Jacoco version here
    toolVersion = "0.8.2"
}

jacocoTestReport {
    // Adjust the output of the test report
    reports {
        xml.enabled true
        csv.enabled false
    }
}


dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Metrics
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"
    implementation "io.micrometer:micrometer-registry-prometheus:1.7.1"

    // Job Scheduler
    implementation "org.quartz-scheduler:quartz:$quartz_version"

    // DI
    implementation "io.insert-koin:koin-ktor:3.1.4"
    implementation "io.insert-koin:koin-logger-slf4j:3.1.4"

    // CSV
    implementation "org.apache.commons:commons-csv:1.5"
    implementation "org.jetbrains.kotlinx:dataframe:$dataframe_version"

    // ML
    implementation "nz.ac.waikato.cms.weka:weka-stable:3.8.0"
    implementation "org.nield:kotlin-statistics:1.2.1"

    // Levenshtein Distance algorithm
    implementation "org.apache.commons:commons-text:1.5"

    // Aho-Corasick algorithm
    implementation "org.ahocorasick:ahocorasick:0.4.0"

    // Validation
    implementation "org.valiktor:valiktor-core:$valiktor_version"

    // Hashing
    implementation "org.mindrot:jbcrypt:$jbcrypt_version"

    // Ktor's core components
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"

    // Date time extension
    implementation "org.threeten:threeten-extra:1.7.0"

    // Auth
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"

    // Database
    implementation "mysql:mysql-connector-java:$mysql_connector_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"
    implementation "com.h2database:h2:$h2_version"
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    implementation "org.flywaydb:flyway-core:$flyway_version"
    implementation "org.flywaydb:flyway-mysql:$flyway_version" // otherwise FlywayException: Unsupported Database: MySQL 8.0

    // Client
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"

    // An implementation of SLF4J
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.slf4j:jul-to-slf4j:1.7.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:1.6.0"

    // Serialization/deserialization
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1"
    implementation "org.apache.camel:camel-xpath:3.9.0"
    implementation "io.ktor:ktor-jackson:$ktor_version"

    // provides a convenient mechanism for converting Kotlin objects into a serialized form like JSON, and vice versa
    implementation "io.ktor:ktor-serialization:$ktor_version"

    // allows us to test parts of our Ktor application without having to use the whole HTTP stack in the process
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "io.mockk:mockk:1.12.2"
    testImplementation 'io.kotest:kotest-runner-junit5:5.0.3'
    testImplementation 'io.kotest:kotest-assertions-core-jvm:5.0.3'
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.0"
}
